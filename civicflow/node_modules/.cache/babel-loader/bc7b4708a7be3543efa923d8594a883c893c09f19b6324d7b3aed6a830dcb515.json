{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yukthasri\\\\OneDrive\\\\Desktop\\\\HTML Tutorial\\\\sambanova_project\\\\civicflow\\\\civicflow\\\\src\\\\pages\\\\SignupPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\n// ✅ E.164 format validation\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst isValidE164 = phone => /^\\+\\d{10,15}$/.test(phone);\nfunction SignupPage() {\n  _s();\n  const [role, setRole] = useState('citizen');\n  const [method, setMethod] = useState('email'); // citizen: phone/email\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phone, setPhone] = useState('');\n  const [otp, setOtp] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const roleParam = searchParams.get('role');\n    if (roleParam) setRole(roleParam);\n  }, [searchParams]);\n  const handleCitizenSignup = async e => {\n    e.preventDefault();\n    if (method === 'phone') {\n      // ✅ Check E.164 format before sending OTP\n      if (!isValidE164(phone)) {\n        alert(\"Invalid phone number. Use format like +919876543210\");\n        return;\n      }\n      const {\n        error\n      } = await supabase.auth.signInWithOtp({\n        phone\n      });\n      if (error) {\n        alert('OTP failed: ' + error.message);\n      } else {\n        alert('OTP sent!');\n        setOtpSent(true);\n      }\n    } else {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password\n      });\n      if (error) return alert('Signup failed: ' + error.message);\n      await supabase.from('user_profiles').insert([{\n        id: data.user.id,\n        role,\n        method: 'email'\n      }]);\n      alert('Signup successful!');\n      navigate('/login?role=citizen');\n    }\n  };\n  const handleCitizenVerifyOtp = async e => {\n    e.preventDefault();\n\n    // ✅ Validate again just to be sure\n    if (!isValidE164(phone)) {\n      alert(\"Invalid phone number. Use format like +919876543210\");\n      return;\n    }\n    const {\n      data,\n      error\n    } = await supabase.auth.verifyOtp({\n      phone,\n      token: otp,\n      type: 'sms'\n    });\n    if (error) return alert('OTP verification failed: ' + error.message);\n    await supabase.from('user_profiles').insert([{\n      id: data.user.id,\n      role,\n      method: 'phone'\n    }]);\n    alert('Signup complete!');\n    navigate('/submit-issue');\n  };\n  const handleAuthoritySignup = async e => {\n    e.preventDefault();\n    const {\n      data,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) return alert('Signup failed: ' + error.message);\n    await supabase.from('user_profiles').insert([{\n      id: data.user.id,\n      role\n    }]);\n    alert('Signup successful!');\n    navigate('/login?role=authority');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [role === 'authority' ? 'Authority' : 'Citizen', \" Signup\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), role === 'citizen' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Signup method:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setMethod('email'),\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setMethod('phone'),\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 88\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: role === 'authority' ? handleAuthoritySignup : otpSent && method === 'phone' ? handleCitizenVerifyOtp : handleCitizenSignup,\n      children: [role === 'citizen' && method === 'phone' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          placeholder: \"Phone (+91...)\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), otpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter OTP\",\n            value: otp,\n            onChange: e => setOtp(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true), (role === 'authority' || role === 'citizen' && method === 'email') && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: otpSent ? 'Verify OTP' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupPage, \"rX6bxCZspoOWppo2Gq99l9ZKzVc=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useEffect","supabase","useNavigate","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","isValidE164","phone","test","SignupPage","_s","role","setRole","method","setMethod","email","setEmail","password","setPassword","setPhone","otp","setOtp","otpSent","setOtpSent","searchParams","navigate","roleParam","get","handleCitizenSignup","e","preventDefault","alert","error","auth","signInWithOtp","message","data","signUp","from","insert","id","user","handleCitizenVerifyOtp","verifyOtp","token","type","handleAuthoritySignup","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/yukthasri/OneDrive/Desktop/HTML Tutorial/sambanova_project/civicflow/civicflow/src/pages/SignupPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\n// ✅ E.164 format validation\r\nconst isValidE164 = (phone) => /^\\+\\d{10,15}$/.test(phone);\r\n\r\nfunction SignupPage() {\r\n  const [role, setRole] = useState('citizen');\r\n  const [method, setMethod] = useState('email'); // citizen: phone/email\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const roleParam = searchParams.get('role');\r\n    if (roleParam) setRole(roleParam);\r\n  }, [searchParams]);\r\n\r\n  const handleCitizenSignup = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (method === 'phone') {\r\n      // ✅ Check E.164 format before sending OTP\r\n      if (!isValidE164(phone)) {\r\n        alert(\"Invalid phone number. Use format like +919876543210\");\r\n        return;\r\n      }\r\n\r\n      const { error } = await supabase.auth.signInWithOtp({ phone });\r\n      if (error) {\r\n        alert('OTP failed: ' + error.message);\r\n      } else {\r\n        alert('OTP sent!');\r\n        setOtpSent(true);\r\n      }\r\n    } else {\r\n      const { data, error } = await supabase.auth.signUp({ email, password });\r\n      if (error) return alert('Signup failed: ' + error.message);\r\n      await supabase.from('user_profiles').insert([{ id: data.user.id, role, method: 'email' }]);\r\n      alert('Signup successful!');\r\n      navigate('/login?role=citizen');\r\n    }\r\n  };\r\n\r\n  const handleCitizenVerifyOtp = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // ✅ Validate again just to be sure\r\n    if (!isValidE164(phone)) {\r\n      alert(\"Invalid phone number. Use format like +919876543210\");\r\n      return;\r\n    }\r\n\r\n    const { data, error } = await supabase.auth.verifyOtp({ phone, token: otp, type: 'sms' });\r\n    if (error) return alert('OTP verification failed: ' + error.message);\r\n\r\n    await supabase.from('user_profiles').insert([{ id: data.user.id, role, method: 'phone' }]);\r\n    alert('Signup complete!');\r\n    navigate('/submit-issue');\r\n  };\r\n\r\n  const handleAuthoritySignup = async (e) => {\r\n    e.preventDefault();\r\n    const { data, error } = await supabase.auth.signUp({ email, password });\r\n    if (error) return alert('Signup failed: ' + error.message);\r\n    await supabase.from('user_profiles').insert([{ id: data.user.id, role }]);\r\n    alert('Signup successful!');\r\n    navigate('/login?role=authority');\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h2>{role === 'authority' ? 'Authority' : 'Citizen'} Signup</h2>\r\n\r\n      {role === 'citizen' && (\r\n        <div>\r\n          <label>Signup method:</label><br />\r\n          <button type=\"button\" onClick={() => setMethod('email')}>Email</button>\r\n          <button type=\"button\" onClick={() => setMethod('phone')}>Phone</button><br /><br />\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={\r\n        role === 'authority'\r\n          ? handleAuthoritySignup\r\n          : otpSent && method === 'phone'\r\n          ? handleCitizenVerifyOtp\r\n          : handleCitizenSignup\r\n      }>\r\n        {role === 'citizen' && method === 'phone' && (\r\n          <>\r\n            <input\r\n              type=\"tel\"\r\n              placeholder=\"Phone (+91...)\"\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n              required\r\n            /><br /><br />\r\n            {otpSent && (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter OTP\"\r\n                  value={otp}\r\n                  onChange={(e) => setOtp(e.target.value)}\r\n                  required\r\n                /><br /><br />\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {((role === 'authority') || (role === 'citizen' && method === 'email')) && (\r\n          <>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            /><br /><br />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            /><br /><br />\r\n          </>\r\n        )}\r\n\r\n        <button type=\"submit\">{otpSent ? 'Verify OTP' : 'Sign Up'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}