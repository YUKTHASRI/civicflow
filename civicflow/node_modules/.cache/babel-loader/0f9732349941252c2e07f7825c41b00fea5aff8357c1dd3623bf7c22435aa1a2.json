{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yukthasri\\\\OneDrive\\\\Desktop\\\\HTML Tutorial\\\\sambanova_project\\\\civicflow\\\\civicflow\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [emailOrPhone, setEmailOrPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [otp, setOtp] = useState('');\n  const [loginMethod, setLoginMethod] = useState(null); // 'phone' or 'email'\n  const [otpSent, setOtpSent] = useState(false);\n  const [role, setRole] = useState('citizen');\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const roleParam = searchParams.get('role');\n    if (roleParam) setRole(roleParam);\n  }, [searchParams]);\n  const handleIdentifyMethod = async () => {\n    const key = role === 'citizen' && emailOrPhone.startsWith('+') ? 'phone' : 'email';\n    const {\n      data,\n      error\n    } = await supabase.from('user_profiles').select('id, method, role').limit(1).eq(key, emailOrPhone).maybeSingle();\n    if (error || !data) {\n      alert('User not found or error occurred.');\n      return;\n    }\n    setLoginMethod(data.method || (role === 'authority' ? 'email' : 'phone'));\n    if (data.method === 'phone') {\n      const {\n        error: otpErr\n      } = await supabase.auth.signInWithOtp({\n        phone: emailOrPhone\n      });\n      if (otpErr) {\n        alert('Failed to send OTP: ' + otpErr.message);\n      } else {\n        alert('OTP sent!');\n        setOtpSent(true);\n      }\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (role === 'citizen' && loginMethod === 'phone' && otpSent) {\n      const {\n        data,\n        error\n      } = await supabase.auth.verifyOtp({\n        phone: emailOrPhone,\n        token: otp,\n        type: 'sms'\n      });\n      if (error) return alert('OTP verification failed: ' + error.message);\n      navigate('/submit-issue');\n      return;\n    }\n    if (role === 'authority' || role === 'citizen' && loginMethod === 'email') {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email: emailOrPhone,\n        password\n      });\n      if (error) return alert('Login failed: ' + error.message);\n      const userId = data.user.id;\n      const {\n        data: profile,\n        error: profileError\n      } = await supabase.from('user_profiles').select('role').eq('id', userId).single();\n      if (profileError || !(profile !== null && profile !== void 0 && profile.role)) {\n        alert('Unable to fetch user role.');\n        return;\n      }\n      if (profile.role === 'authority') {\n        navigate('/authority-dashboard');\n      } else {\n        navigate('/submit-issue');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [role === 'authority' ? 'Authority' : 'Citizen', \" Login\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: role === 'citizen' ? 'text' : 'email',\n        placeholder: role === 'citizen' ? 'Phone (+91...) or Email' : 'Email',\n        value: emailOrPhone,\n        onChange: e => setEmailOrPhone(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), role === 'citizen' && !loginMethod && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleIdentifyMethod,\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), (role === 'authority' || loginMethod === 'email') && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), role === 'citizen' && loginMethod === 'phone' && otpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"WqZcm3UwHkjtwSPffTwE9OmF0cg=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSearchParams","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","emailOrPhone","setEmailOrPhone","password","setPassword","otp","setOtp","loginMethod","setLoginMethod","otpSent","setOtpSent","role","setRole","searchParams","navigate","roleParam","get","handleIdentifyMethod","key","startsWith","data","error","from","select","limit","eq","maybeSingle","alert","method","otpErr","auth","signInWithOtp","phone","message","handleLogin","e","preventDefault","verifyOtp","token","type","signInWithPassword","email","userId","user","id","profile","profileError","single","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yukthasri/OneDrive/Desktop/HTML Tutorial/sambanova_project/civicflow/civicflow/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nfunction LoginPage() {\r\n  const [emailOrPhone, setEmailOrPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [loginMethod, setLoginMethod] = useState(null); // 'phone' or 'email'\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [role, setRole] = useState('citizen');\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const roleParam = searchParams.get('role');\r\n    if (roleParam) setRole(roleParam);\r\n  }, [searchParams]);\r\n\r\n  const handleIdentifyMethod = async () => {\r\n    const key = role === 'citizen' && emailOrPhone.startsWith('+') ? 'phone' : 'email';\r\n\r\n    const { data, error } = await supabase\r\n      .from('user_profiles')\r\n      .select('id, method, role')\r\n      .limit(1)\r\n      .eq(key, emailOrPhone)\r\n      .maybeSingle();\r\n\r\n    if (error || !data) {\r\n      alert('User not found or error occurred.');\r\n      return;\r\n    }\r\n\r\n    setLoginMethod(data.method || (role === 'authority' ? 'email' : 'phone'));\r\n\r\n    if (data.method === 'phone') {\r\n      const { error: otpErr } = await supabase.auth.signInWithOtp({ phone: emailOrPhone });\r\n      if (otpErr) {\r\n        alert('Failed to send OTP: ' + otpErr.message);\r\n      } else {\r\n        alert('OTP sent!');\r\n        setOtpSent(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (role === 'citizen' && loginMethod === 'phone' && otpSent) {\r\n      const { data, error } = await supabase.auth.verifyOtp({\r\n        phone: emailOrPhone,\r\n        token: otp,\r\n        type: 'sms',\r\n      });\r\n\r\n      if (error) return alert('OTP verification failed: ' + error.message);\r\n\r\n      navigate('/submit-issue');\r\n      return;\r\n    }\r\n\r\n    if (role === 'authority' || (role === 'citizen' && loginMethod === 'email')) {\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email: emailOrPhone,\r\n        password,\r\n      });\r\n\r\n      if (error) return alert('Login failed: ' + error.message);\r\n\r\n      const userId = data.user.id;\r\n      const { data: profile, error: profileError } = await supabase\r\n        .from('user_profiles')\r\n        .select('role')\r\n        .eq('id', userId)\r\n        .single();\r\n\r\n      if (profileError || !profile?.role) {\r\n        alert('Unable to fetch user role.');\r\n        return;\r\n      }\r\n\r\n      if (profile.role === 'authority') {\r\n        navigate('/authority-dashboard');\r\n      } else {\r\n        navigate('/submit-issue');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h2>{role === 'authority' ? 'Authority' : 'Citizen'} Login</h2>\r\n\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type={role === 'citizen' ? 'text' : 'email'}\r\n          placeholder={role === 'citizen' ? 'Phone (+91...) or Email' : 'Email'}\r\n          value={emailOrPhone}\r\n          onChange={(e) => setEmailOrPhone(e.target.value)}\r\n          required\r\n        /><br /><br />\r\n\r\n        {role === 'citizen' && !loginMethod && (\r\n          <button type=\"button\" onClick={handleIdentifyMethod}>\r\n            Continue\r\n          </button>\r\n        )}\r\n\r\n        {(role === 'authority' || loginMethod === 'email') && (\r\n          <>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            /><br /><br />\r\n            <button type=\"submit\">Login</button>\r\n          </>\r\n        )}\r\n\r\n        {role === 'citizen' && loginMethod === 'phone' && otpSent && (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter OTP\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              required\r\n            /><br /><br />\r\n            <button type=\"submit\">Verify OTP</button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}