{"ast":null,"code":"const signUp = async (email, password, role = 'user') => {\n  const {\n    data,\n    error\n  } = await supabase.auth.signUp({\n    email,\n    password\n  });\n  if (error) {\n    console.error('Signup error:', error);\n    return;\n  }\n  const user = data.user;\n\n  // Insert into users table with role\n  await supabase.from('users').insert([{\n    id: user.id,\n    email: user.email,\n    role\n  }]);\n};","map":{"version":3,"names":["signUp","email","password","role","data","error","supabase","auth","console","user","from","insert","id"],"sources":["C:/Users/yukthasri/OneDrive/Desktop/HTML Tutorial/sambanova_project/civicflow/civicflow/src/pages/SignupPage.jsx"],"sourcesContent":["const signUp = async (email, password, role = 'user') => {\r\n  const { data, error } = await supabase.auth.signUp({ email, password });\r\n  if (error) {\r\n    console.error('Signup error:', error);\r\n    return;\r\n  }\r\n\r\n  const user = data.user;\r\n\r\n  // Insert into users table with role\r\n  await supabase.from('users').insert([\r\n    { id: user.id, email: user.email, role }\r\n  ]);\r\n};\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,GAAG,MAAM,KAAK;EACvD,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMC,QAAQ,CAACC,IAAI,CAACP,MAAM,CAAC;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC;EACvE,IAAIG,KAAK,EAAE;IACTG,OAAO,CAACH,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC;EACF;EAEA,MAAMI,IAAI,GAAGL,IAAI,CAACK,IAAI;;EAEtB;EACA,MAAMH,QAAQ,CAACI,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,CAClC;IAAEC,EAAE,EAAEH,IAAI,CAACG,EAAE;IAAEX,KAAK,EAAEQ,IAAI,CAACR,KAAK;IAAEE;EAAK,CAAC,CACzC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}