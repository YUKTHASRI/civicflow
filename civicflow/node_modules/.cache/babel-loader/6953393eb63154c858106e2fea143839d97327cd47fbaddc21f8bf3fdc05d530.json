{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yukthasri\\\\OneDrive\\\\Desktop\\\\HTML Tutorial\\\\sambanova_project\\\\civicflow\\\\civicflow\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    csharp;\n    Copy;\n    Edit;\n    const {\n      data: loginData,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) {\n      alert(error.message);\n    } else {\n      var _loginData$user;\n      const userId = (_loginData$user = loginData.user) === null || _loginData$user === void 0 ? void 0 : _loginData$user.id;\n      const {\n        data: profile\n      } = await supabase.from('user_profiles').select('role').eq('id', userId).single();\n      if ((profile === null || profile === void 0 ? void 0 : profile.role) === 'authority') {\n        navigate('/authority-dashboard');\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/signup\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 1\n  }, this);\n}\n_s(LoginPage, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","supabase","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","csharp","Copy","Edit","data","loginData","error","auth","signInWithPassword","alert","message","_loginData$user","userId","user","id","profile","from","select","eq","single","role","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","value","required","href","_c","$RefreshReg$"],"sources":["C:/Users/yukthasri/OneDrive/Desktop/HTML Tutorial/sambanova_project/civicflow/civicflow/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\nconst [email, setEmail] = useState('');\r\nconst [password, setPassword] = useState('');\r\nconst navigate = useNavigate();\r\n\r\nconst handleLogin = async (e) => {\r\ne.preventDefault();\r\n\r\ncsharp\r\nCopy\r\nEdit\r\nconst { data: loginData, error } = await supabase.auth.signInWithPassword({\r\n  email,\r\n  password\r\n});\r\n\r\nif (error) {\r\n  alert(error.message);\r\n} else {\r\n  const userId = loginData.user?.id;\r\n  const { data: profile } = await supabase\r\n    .from('user_profiles')\r\n    .select('role')\r\n    .eq('id', userId)\r\n    .single();\r\n\r\n  if (profile?.role === 'authority') {\r\n    navigate('/authority-dashboard');\r\n  } else {\r\n    navigate('/dashboard');\r\n  }\r\n}\r\n};\r\n\r\nreturn (\r\n<div>\r\n<h1>Login Page</h1>\r\n<form onSubmit={handleLogin}>\r\n<input type=\"email\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)} required />\r\n<br />\r\n<input type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required />\r\n<br />\r\n<button type=\"submit\">Login</button>\r\n</form>\r\n<p>Don't have an account? <a href=\"/signup\">Sign up</a></p>\r\n</div>\r\n);\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}