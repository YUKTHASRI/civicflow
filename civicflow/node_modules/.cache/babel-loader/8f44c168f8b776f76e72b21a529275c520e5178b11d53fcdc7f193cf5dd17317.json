{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yukthasri\\\\OneDrive\\\\Desktop\\\\HTML Tutorial\\\\sambanova_project\\\\civicflow\\\\civicflow\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('citizen');\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const roleParam = searchParams.get('role');\n    if (roleParam) setRole(roleParam);\n  }, [searchParams]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) {\n      alert('Login failed: ' + error.message);\n      return;\n    }\n    const userId = data.user.id;\n\n    // Fetch user role from user_profiles\n    const {\n      data: profile,\n      error: profileError\n    } = await supabase.from('user_profiles').select('role').eq('id', userId).single();\n    if (profileError || !(profile !== null && profile !== void 0 && profile.role)) {\n      alert('Unable to fetch user role.');\n      return;\n    }\n\n    // Log login action\n    await supabase.from('auth_logs').insert([{\n      user_id: userId,\n      email: email,\n      role: profile.role,\n      action: 'login'\n    }]);\n    if (profile.role === 'authority') {\n      navigate('/authority-dashboard');\n    } else {\n      navigate('/submit-issue');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [role === 'authority' ? 'Authority' : 'Citizen', \" Login\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"zFF9rlDShsZmPWnvcLfiBnVc3ws=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSearchParams","supabase","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","role","setRole","searchParams","navigate","roleParam","get","handleLogin","e","preventDefault","data","error","auth","signInWithPassword","alert","message","userId","user","id","profile","profileError","from","select","eq","single","insert","user_id","action","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/yukthasri/OneDrive/Desktop/HTML Tutorial/sambanova_project/civicflow/civicflow/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nfunction LoginPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [role, setRole] = useState('citizen');\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const roleParam = searchParams.get('role');\r\n    if (roleParam) setRole(roleParam);\r\n  }, [searchParams]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { data, error } = await supabase.auth.signInWithPassword({\r\n      email,\r\n      password,\r\n    });\r\n\r\n    if (error) {\r\n      alert('Login failed: ' + error.message);\r\n      return;\r\n    }\r\n\r\n    const userId = data.user.id;\r\n\r\n    // Fetch user role from user_profiles\r\n    const { data: profile, error: profileError } = await supabase\r\n      .from('user_profiles')\r\n      .select('role')\r\n      .eq('id', userId)\r\n      .single();\r\n\r\n    if (profileError || !profile?.role) {\r\n      alert('Unable to fetch user role.');\r\n      return;\r\n    }\r\n\r\n    // Log login action\r\n    await supabase.from('auth_logs').insert([\r\n      {\r\n        user_id: userId,\r\n        email: email,\r\n        role: profile.role,\r\n        action: 'login',\r\n      },\r\n    ]);\r\n\r\n    if (profile.role === 'authority') {\r\n      navigate('/authority-dashboard');\r\n    } else {\r\n      navigate('/submit-issue');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h2>{role === 'authority' ? 'Authority' : 'Citizen'} Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        /><br /><br />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        /><br /><br />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}